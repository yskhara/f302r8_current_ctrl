/*
 * atan.cpp
 *
 *  Created on: Aug 5, 2021
 *      Author: yusaku
 */

#include "atan.h"

namespace
{
    constexpr int AtanTableLength = 126;
    extern float32_t AtanTable[AtanTableLength + 2];

    float32_t atanLUT (const float32_t tan)
    {
        // map [0:1) -> [0:128)
        float32_t findex = tan * (float32_t) AtanTableLength;
        if (findex >= (float32_t) AtanTableLength + 1.0f)
            findex -= (float32_t) AtanTableLength;
        int index = findex;
        float32_t fract = findex - (float32_t) index;

        float32_t a = AtanTable[index];
        float32_t b = AtanTable[index + 1];

        return (1.0f - fract) * a + fract * b;
    }
};

float32_t atan2LUT (const float32_t y, const float32_t x)
{
    if (y >= 0)
    {
        if (x >= 0)
        { // first quadrant
            if (x > y)
            { // sector 0
                return atanLUT (y / x);
            }
            else
            {
                return (float32_t) (M_PI / 2.0f) - atanLUT (x / y);
            }
        }
        else
        { // 2nd quadrant
            if (-x < y)
            { // sector 2
                return (float32_t) (M_PI / 2.0f) + atanLUT (-x / y);
            }
            else
            { //sector 3
                return (float32_t) M_PI - atanLUT (-y / x);
            }
        }
    }
    else
    {
        if (x < 0)
        { // 3rd quadrant
            if (x < y)
            { // sector 4
                return (float32_t) (-M_PI) + atanLUT (y / x);
            }
            else
            { // sector 5
                return (float32_t) (-M_PI / 2.0f) - atanLUT (x / y);
            }
        }
        else
        { // 4th quadrant
            if (-y > x)
            { //sector 6
                return (float32_t) (-M_PI / 2.0f) + atanLUT (-x / y);
            }
            else
            { // sector 7
                return -atanLUT (-y / x);
            }
        }
    }
}

namespace
{
float32_t AtanTable[AtanTableLength + 2] =
    {
        { 0.000000000e+00f },
        { 7.936341688e-03f },
        { 1.587168314e-02f },
        { 2.380502596e-02f },
        { 3.173537552e-02f },
        { 3.966173157e-02f },
        { 4.758310318e-02f },
        { 5.549850687e-02f },
        { 6.340695918e-02f },
        { 7.130746543e-02f },
        { 7.919907570e-02f },
        { 8.708080649e-02f },
        { 9.495171160e-02f },
        { 1.028108299e-01f },
        { 1.106572226e-01f },
        { 1.184899583e-01f },
        { 1.263081282e-01f },
        { 1.341107935e-01f },
        { 1.418970674e-01f },
        { 1.496660560e-01f },
        { 1.574168801e-01f },
        { 1.651486754e-01f },
        { 1.728606075e-01f },
        { 1.805518270e-01f },
        { 1.882215142e-01f },
        { 1.958688498e-01f },
        { 2.034930438e-01f },
        { 2.110933363e-01f },
        { 2.186689526e-01f },
        { 2.262191325e-01f },
        { 2.337431759e-01f },
        { 2.412403673e-01f },
        { 2.487100065e-01f },
        { 2.561514080e-01f },
        { 2.635639012e-01f },
        { 2.709468603e-01f },
        { 2.782996595e-01f },
        { 2.856217027e-01f },
        { 2.929123938e-01f },
        { 3.001711667e-01f },
        { 3.073974848e-01f },
        { 3.145907819e-01f },
        { 3.217505515e-01f },
        { 3.288763463e-01f },
        { 3.359676003e-01f },
        { 3.430239558e-01f },
        { 3.500449061e-01f },
        { 3.570300341e-01f },
        { 3.639789522e-01f },
        { 3.708913028e-01f },
        { 3.777666688e-01f },
        { 3.846047223e-01f },
        { 3.914051354e-01f },
        { 3.981675804e-01f },
        { 4.048917890e-01f },
        { 4.115774632e-01f },
        { 4.182243347e-01f },
        { 4.248321652e-01f },
        { 4.314007163e-01f },
        { 4.379298091e-01f },
        { 4.444192052e-01f },
        { 4.508687556e-01f },
        { 4.572782815e-01f },
        { 4.636476040e-01f },
        { 4.699766636e-01f },
        { 4.762652218e-01f },
        { 4.825133085e-01f },
        { 4.887207150e-01f },
        { 4.948874712e-01f },
        { 5.010133982e-01f },
        { 5.070984960e-01f },
        { 5.131427646e-01f },
        { 5.191461444e-01f },
        { 5.251085758e-01f },
        { 5.310301185e-01f },
        { 5.369107127e-01f },
        { 5.427505374e-01f },
        { 5.485494137e-01f },
        { 5.543075204e-01f },
        { 5.600247979e-01f },
        { 5.657014847e-01f },
        { 5.713374615e-01f },
        { 5.769329667e-01f },
        { 5.824879408e-01f },
        { 5.880026221e-01f },
        { 5.934770107e-01f },
        { 5.989112854e-01f },
        { 6.043055058e-01f },
        { 6.096598506e-01f },
        { 6.149744987e-01f },
        { 6.202495098e-01f },
        { 6.254850030e-01f },
        { 6.306813359e-01f },
        { 6.358383894e-01f },
        { 6.409565806e-01f },
        { 6.460359693e-01f },
        { 6.510767341e-01f },
        { 6.560790539e-01f },
        { 6.610431671e-01f },
        { 6.659692526e-01f },
        { 6.708574891e-01f },
        { 6.757080555e-01f },
        { 6.805212498e-01f },
        { 6.852971315e-01f },
        { 6.900361180e-01f },
        { 6.947382689e-01f },
        { 6.994038820e-01f },
        { 7.040331364e-01f },
        { 7.086262703e-01f },
        { 7.131835222e-01f },
        { 7.177051306e-01f },
        { 7.221913338e-01f },
        { 7.266423702e-01f },
        { 7.310584188e-01f },
        { 7.354397774e-01f },
        { 7.397866249e-01f },
        { 7.440993190e-01f },
        { 7.483780384e-01f },
        { 7.526230216e-01f },
        { 7.568345070e-01f },
        { 7.610127330e-01f },
        { 7.651579976e-01f },
        { 7.692705393e-01f },
        { 7.733505368e-01f },
        { 7.773983479e-01f },
        { 7.814140916e-01f },
        { 7.853981853e-01f },
        { 7.893506885e-01f }, };
};

